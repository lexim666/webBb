@page
@model IndexModel
@{
    ViewData["Title"] = "SVG";
}
<h2>@ViewData["Title"]</h2>
<p><b>SVG</b> (от англ. Scalable Vector Graphics — масштабируемая векторная графика) — язык разметки масштабируемой векторной графики,<br> созданный Консорциумом Всемирной паутины (W3C) и входящий в подмножество расширяемого языка разметки XML, предназначен для описания <br>двумерной векторной и смешанной векторно/растровой графики в формате XML. Поддерживает как неподвижную, так и анимированную <br>интерактивную графику — или, в иных терминах, декларативную и скриптовую. Не поддерживает описание трёхмерных объектов <br>(не путать с имитацией трёхмерности путём светотени).</p>
<p>Векторная графика широко применяется в полиграфии. Для веб-сайтов существует SVG, которая согласно <a href="http://www.w3.org/TR/SVG/">официальной спецификации на w3.org</a> является языком для описания двумерной графики в XML. SVG включает в себя три типа объектов: фигуры, изображения и текст.<br> SVG существует с 1999 года</p>
<p>
    Преимущество "вектора" над "растром"</p>
   <p> <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Bitmap_VS_SVG_ru.svg/1063px-Bitmap_VS_SVG_ru.svg.png" width="530" height="318"></p>
<h4><b>Достоинства</b></h4>
<p>1) Текстовый формат — файлы SVG можно читать и редактировать (при наличии некоторых навыков) при помощи <b>обычных текстовых редакторов</b>. </p>
<p>2) Масштабируемость — SVG является векторным форматом. Существует возможность увеличить любую часть изображения SVG <b>без потери качества</b>.</p>
<p>3) Широко доступно использование <b>растровой графики</b> в SVG-документах. Имеется возможность вставлять элементы с изображениями в <br>форматах PNG, GIF или JPG.</p>
<p>4) <b>Текст в графике SVG является текстом</b>, а не изображением, поэтому его можно выделять и копировать, он индексируется поисковыми <br>машинами, не нужно создавать дополнительные метафайлы для поисковых роботов.</p>
<p>5) Анимация реализована в SVG с помощью языка <b>SMIL</b> (Synchronized Multimedia Integration Language), разработанного также консорциумом<br> W3C.</p>
<p>6) SVG — <b>открытый стандарт</b>. В отличие от некоторых других форматов, SVG не является чьей-либо собственностью.</p>
<p>7) SVG-документы легко интегрируются с <b>HTML и XHTML</b> документами.</p>
<p>8) <b>Совместимость с CSS</b> (англ. Cascading Style Sheets). Отображением (форматированием и декорированием) SVG-элементов можно управлять с <br>помощью таблицы стилей CSS 2.0 и её расширений, либо напрямую с помощью атрибутов SVG-элементов.</p>
<p>9) SVG предоставляет <b>все преимущества XML</b></p>

<h4><b>Недостатки</b></h4>
<p>1) С увеличением количества мелких деталей в изображении, <b>быстрее растёт размер файла SVG-данных</b>. Предельный случай — когда <br>изображение представляет собой белый шум. В этом случае SVG не только не даёт никаких преимуществ в размере файла, но даже<br> имеет проигрыш по отношению к растровому формату. На практике, SVG становится невыгоден уже задолго до того, как изображение <br>дойдёт до стадии белого шума.</p>
<p>2) <b>Трудность использования в крупных картографических приложениях</b> из-за того, что для правильного отображения маленькой части изображения <br>документ необходимо прочитать целиком.</p>
<p>3) В настоящее время SVG формат применяется в Интернете сравнительно мало, из-за <b>недостаточной кроссбраузерности</b>. Лучше всего <br>обстоят дела у Mozilla Firefox со встроенным просмотрщиком SVG, так как ее разработчики находятся в рабочей группе Консорциума Всемирной <br>паутины (W3C) по разработке и внедрению стандарта SVG. </p>
<p>Согласно официальной спецификации можно рисовать простые объекты с помощью SVG: прямоугольник, окружность, линию, эллипс, ломаную линию или многоугольник при помощи тега svg.
Простая линия с помощью тега line с всего двумя параметрами — точками начала (x1 и x2) и конца (y1 и y2):</p>
<script async src="//jsfiddle.net/f8vL1g2k/1/embed/html,result/"></script>
<h4><b>Структура документа SVG:</b></h4>
<p><b>Первая строка</b> — стандартный XML-заголовок, объявление (англ. XML declaration), указывающее версию XML (version) (обычно «1.0») <br>и кодировку символов (encoding)</p>
<p>Во <b>второй и третьей</b> строках должен располагаться заголовок DOCTYPE, определяющий тип документа</p>
<p>В <b>четвёртой</b> строке размещается корневой элемент документа с указанием пространства имён SVG.</p>
<p><b>Далее</b> идёт остальной текст документа вложенный в корневой элемент, где собственно располагаются элементы, описывающие содержание <br>кодируемой сцены.
    Завершается документ всегда закрытием корневого тега <b>svg</b>
</p>
<p>Простой статичный SVG-документ с контуром квадрата размером 400 пикселей и тремя полупрозрачными кругами радиусом 104 пикселей, по <br>центру квадрата, каждый круг смещается от центра квадрата примерно на полрадиуса.</p>
<script async src="//jsfiddle.net/LvjLggv0/embed/html,result/"></script>
<p>Поскольку код SVG занимает довольно много места, была создана «обёртка» SVGZ, когда SVG сжимают с помощью gzip, а полученному файлу присваивают расширение «SVGZ».
SVG хорошо сжимается, поскольку это текстовый XML-документ, имеющий регулярную структуру.</p>
<h4><b>Инструменты</b></h4>
    <p>
        Принцип работы приложений заключается в следующем, они удаляют «ненужную» информацию из SVG, тем самым уменьшается размер самого файла. На сегодняшний день можно выделить три основных приложения для оптимизации SVG:
    </p>
    <p>1) SVG Cleaner;</p>
    <p>2) SVG Scour (для работы необходимо установить Python);</p>
    <p>3) SVG Optimizer (для работы необходимо установить Node.js).</p>
    <p>Среди всех приложений SVG Optimizer показал наилучшие результаты по данным статьи<a href="https://habrahabr.ru/post/170509/"> оптимизация/сжатие SVG-изображений</a></p>


    <h4><b>Анимация</b></h4>
    <p>
        Анимация в SVG осуществляется при помощи языка SMIL (Synchronized Multimedia Integration Language). Также поддерживаются <br>скриптовые языки на основе спецификации ECMAScript — это встраиваемый расширяемый язык программирования.
        То есть всё находится в одном месте,<br> внутри документа SVG, поэтому нет необходимости для подключения внешних библиотек.
    </p>
    <p>На каждую отдельную фигуру или на целое изображение можно установить обработчик событий (клик, наведение мышки, нажатие клавиши <br>и т.д), таким образом, пользователь может управлять рисунком.</p>
    <p>Посмотрим несколько анимаций</p>
    <p>Создадим простой двигающийся круг</p>
    <script async src="//jsfiddle.net/xzj5syvb/embed/html,css,result/dark/"></script>

    <p>Падающий мячик</p>
    <script async src="//jsfiddle.net/6h6rtrqr/1/embed/html,css,result/dark/"></script>
    <p>Атрибут keySplines задает функцию плавности для каждого перехода.</p>

    <p>Если вы хотите задать лишь единую функцию плавности для всей анимации без каких-либо промежуточных значений, вам всё равно придется задавать ключевые кадры с помощью атрибута keyTimes, но понадобятся только начальный и конечный кадры, т.е. 0; 1, и никаких промежуточных values.</p>
    <p>Нажмем на круг, квадрат начнет движение через секунду, но придет раньше круга.</p>
    <script async src="//jsfiddle.net/xn5Lnmd3/3/embed/html,css,result/dark/"></script>
    <p>Именно begin="circ-anim.begin + 1s" — та часть, что указывает браузеру начать анимацию прямоугольника через 1 секунду после начала анимации круга.</p>
    <p>repeatCount="indefinite" - позволяет зациклить движение фигур</p>
    <p>Вот симпатичная несложная бесконечная анимация с использованием задержек времени начала, созданная Майлзом Иламом:</p>
    <script async src="//jsfiddle.net/2q0y028r/embed/html,result/"></script>

    <p>Пример из спецификации SVG</p>
    <script async src="//jsfiddle.net/wodxLxrb/embed/html,result/dark/"></script>

<p>Ну и напоследок машинка, которая ездит по определенной нарисованной траектории</p>
<script async src="//jsfiddle.net/nf7zpcjd/embed/html,css,result/"></script>

<p><b>Литература:</b></p>
<p><a href="http://css-live.ru/articles/rukovodstvo-po-svg-animaciyam-smil.html">Руководство по SVG-анимациям</a></p>
<p><a href="https://svg-art.ru/">SVG – Scalable Vector Graphics</a></p>
<p><a href="https://ru.wikipedia.org/wiki/SVG">SVG</a></p>
